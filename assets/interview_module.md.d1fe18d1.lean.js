import{_ as s,c as a,o as e,d as l}from"./app.fc8d6d98.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"html","slug":"html","link":"#html","children":[{"level":3,"title":"1、页面中的JS需要提前加载，不阻塞页面渲染，怎么做","slug":"_1、页面中的js需要提前加载-不阻塞页面渲染-怎么做","link":"#_1、页面中的js需要提前加载-不阻塞页面渲染-怎么做","children":[]},{"level":3,"title":"2、对html语义化的理解","slug":"_2、对html语义化的理解","link":"#_2、对html语义化的理解","children":[]},{"level":3,"title":"3、两个image标签，并排展示和上下展示有什么区别吗","slug":"_3、两个image标签-并排展示和上下展示有什么区别吗","link":"#_3、两个image标签-并排展示和上下展示有什么区别吗","children":[]}]},{"level":2,"title":"css","slug":"css","link":"#css","children":[{"level":3,"title":"1、CSS盒模型由几种。怎么去设置盒模型","slug":"_1、css盒模型由几种。怎么去设置盒模型","link":"#_1、css盒模型由几种。怎么去设置盒模型","children":[]},{"level":3,"title":"2、如何实现一个元素的水平垂直方向上的居中","slug":"_2、如何实现一个元素的水平垂直方向上的居中","link":"#_2、如何实现一个元素的水平垂直方向上的居中","children":[]},{"level":3,"title":"3、CSS的选择器有哪些，他们的优先级如何","slug":"_3、css的选择器有哪些-他们的优先级如何","link":"#_3、css的选择器有哪些-他们的优先级如何","children":[]},{"level":3,"title":"4、如何实现一个元素水平垂直方向上的居中","slug":"_4、如何实现一个元素水平垂直方向上的居中","link":"#_4、如何实现一个元素水平垂直方向上的居中","children":[]},{"level":3,"title":"5、rem是什么。适配的原理是什么","slug":"_5、rem是什么。适配的原理是什么","link":"#_5、rem是什么。适配的原理是什么","children":[]},{"level":3,"title":"6、媒体查询有接触过吗","slug":"_6、媒体查询有接触过吗","link":"#_6、媒体查询有接触过吗","children":[]},{"level":3,"title":"7、BFC是什么，有什么特点，如何触发BFC","slug":"_7、bfc是什么-有什么特点-如何触发bfc","link":"#_7、bfc是什么-有什么特点-如何触发bfc","children":[]},{"level":3,"title":"8、如何隐藏一个元素","slug":"_8、如何隐藏一个元素","link":"#_8、如何隐藏一个元素","children":[]},{"level":3,"title":"9、什么是重排和重绘，如何避免重排和重绘","slug":"_9、什么是重排和重绘-如何避免重排和重绘","link":"#_9、什么是重排和重绘-如何避免重排和重绘","children":[]},{"level":3,"title":"10、伪元素和伪类有什么区别","slug":"_10、伪元素和伪类有什么区别","link":"#_10、伪元素和伪类有什么区别","children":[]},{"level":3,"title":"11、哪些css树形的改变会引起重绘而不会引起重排","slug":"_11、哪些css树形的改变会引起重绘而不会引起重排","link":"#_11、哪些css树形的改变会引起重绘而不会引起重排","children":[]},{"level":3,"title":"12、使用transform对某个div进行位移，会引起回流（重排）吗","slug":"_12、使用transform对某个div进行位移-会引起回流-重排-吗","link":"#_12、使用transform对某个div进行位移-会引起回流-重排-吗","children":[]},{"level":3,"title":"13、h5的不同屏幕分辨率怎么适配","slug":"_13、h5的不同屏幕分辨率怎么适配","link":"#_13、h5的不同屏幕分辨率怎么适配","children":[]},{"level":3,"title":"14、给两个div分别设置transform: translateX(400px) scale(.5)，transform: scale(.5) translateX(400px)会有什么不同吗","slug":"_14、给两个div分别设置transform-translatex-400px-scale-5-transform-scale-5-translatex-400px-会有什么不同吗","link":"#_14、给两个div分别设置transform-translatex-400px-scale-5-transform-scale-5-translatex-400px-会有什么不同吗","children":[]},{"level":3,"title":"15、rem、em、vh、vw、px都是相对于谁的","slug":"_15、rem、em、vh、vw、px都是相对于谁的","link":"#_15、rem、em、vh、vw、px都是相对于谁的","children":[]},{"level":3,"title":"16、常见的水平居中的方式","slug":"_16、常见的水平居中的方式","link":"#_16、常见的水平居中的方式","children":[]},{"level":3,"title":"17、css中的计算属性：calc","slug":"_17、css中的计算属性-calc","link":"#_17、css中的计算属性-calc","children":[]}]},{"level":2,"title":"js","slug":"js","link":"#js","children":[{"level":3,"title":"1、对象和数组，如何区分哪个是对象哪个是数组","slug":"_1、对象和数组-如何区分哪个是对象哪个是数组","link":"#_1、对象和数组-如何区分哪个是对象哪个是数组","children":[]},{"level":3,"title":"2、改变this指向的方法？call、apply、bind的区别","slug":"_2、改变this指向的方法-call、apply、bind的区别","link":"#_2、改变this指向的方法-call、apply、bind的区别","children":[]},{"level":3,"title":"3、基本数据类型和引用数据类型的区别","slug":"_3、基本数据类型和引用数据类型的区别","link":"#_3、基本数据类型和引用数据类型的区别","children":[]},{"level":3,"title":"4、箭头函数和普通函数的区别","slug":"_4、箭头函数和普通函数的区别","link":"#_4、箭头函数和普通函数的区别","children":[]},{"level":3,"title":"5、简单说一下原型链","slug":"_5、简单说一下原型链","link":"#_5、简单说一下原型链","children":[]},{"level":3,"title":"6、闭包是什么","slug":"_6、闭包是什么","link":"#_6、闭包是什么","children":[]},{"level":3,"title":"7、如何实现深拷贝","slug":"_7、如何实现深拷贝","link":"#_7、如何实现深拷贝","children":[]},{"level":3,"title":"8、forEach和map的区别","slug":"_8、foreach和map的区别","link":"#_8、foreach和map的区别","children":[]},{"level":3,"title":"9、遍历数组的方式，他们的区别：for循环、forEach、for...in、for...of","slug":"_9、遍历数组的方式-他们的区别-for循环、foreach、for-in、for-of","link":"#_9、遍历数组的方式-他们的区别-for循环、foreach、for-in、for-of","children":[]},{"level":3,"title":"10、for...in可以遍历set和map吗","slug":"_10、for-in可以遍历set和map吗","link":"#_10、for-in可以遍历set和map吗","children":[]},{"level":3,"title":"11、TS相比JS增加了什么","slug":"_11、ts相比js增加了什么","link":"#_11、ts相比js增加了什么","children":[]},{"level":3,"title":"12、TS中interface和type有什么异同","slug":"_12、ts中interface和type有什么异同","link":"#_12、ts中interface和type有什么异同","children":[]},{"level":3,"title":"13、promise是如何实现链式调用的","slug":"_13、promise是如何实现链式调用的","link":"#_13、promise是如何实现链式调用的","children":[]},{"level":3,"title":"14、MutationObserver和ResizeObserver","slug":"_14、mutationobserver和resizeobserver","link":"#_14、mutationobserver和resizeobserver","children":[]},{"level":3,"title":"15、为什么会有对象的深浅拷贝","slug":"_15、为什么会有对象的深浅拷贝","link":"#_15、为什么会有对象的深浅拷贝","children":[]},{"level":3,"title":"16、TS中interface和class的区别","slug":"_16、ts中interface和class的区别","link":"#_16、ts中interface和class的区别","children":[]},{"level":3,"title":"17、promise.all、promise.race()、promise.allSettled()有什么区别","slug":"_17、promise-all、promise-race-、promise-allsettled-有什么区别","link":"#_17、promise-all、promise-race-、promise-allsettled-有什么区别","children":[]},{"level":3,"title":"18、promise.then方法的传参有几个，分别是什么","slug":"_18、promise-then方法的传参有几个-分别是什么","link":"#_18、promise-then方法的传参有几个-分别是什么","children":[]},{"level":3,"title":"19、在then方法链最后添加了一个catch，then方法里面使用reject回调，catch会捕获到吗？","slug":"_19、在then方法链最后添加了一个catch-then方法里面使用reject回调-catch会捕获到吗","link":"#_19、在then方法链最后添加了一个catch-then方法里面使用reject回调-catch会捕获到吗","children":[]},{"level":3,"title":"20、原生JS，进入某个页面的时候，地址里面带上了hash值，页面会有什么效果","slug":"_20、原生js-进入某个页面的时候-地址里面带上了hash值-页面会有什么效果","link":"#_20、原生js-进入某个页面的时候-地址里面带上了hash值-页面会有什么效果","children":[]},{"level":3,"title":"21、JS中如何进行事件绑定（绑定事件的方式）","slug":"_21、js中如何进行事件绑定-绑定事件的方式","link":"#_21、js中如何进行事件绑定-绑定事件的方式","children":[]},{"level":3,"title":"22、addEventListener和onclick=这两种方式有什么区别","slug":"_22、addeventlistener和onclick-这两种方式有什么区别","link":"#_22、addeventlistener和onclick-这两种方式有什么区别","children":[]},{"level":3,"title":"23、ES的解构是深拷贝还是浅拷贝","slug":"_23、es的解构是深拷贝还是浅拷贝","link":"#_23、es的解构是深拷贝还是浅拷贝","children":[]},{"level":3,"title":"24、JSON.parse盒JSON.stringfy实现深拷贝有什么缺点","slug":"_24、json-parse盒json-stringfy实现深拷贝有什么缺点","link":"#_24、json-parse盒json-stringfy实现深拷贝有什么缺点","children":[]},{"level":3,"title":"25、判断数据类型的方法","slug":"_25、判断数据类型的方法","link":"#_25、判断数据类型的方法","children":[]},{"level":3,"title":"26、判断一个变量是不是数组有哪几种方法","slug":"_26、判断一个变量是不是数组有哪几种方法","link":"#_26、判断一个变量是不是数组有哪几种方法","children":[]},{"level":3,"title":"27、ES6的symbol","slug":"_27、es6的symbol","link":"#_27、es6的symbol","children":[]},{"level":3,"title":"28、微任务盒宏任务；","slug":"_28、微任务盒宏任务","link":"#_28、微任务盒宏任务","children":[]},{"level":3,"title":"29、JS的包装类型是什么","slug":"_29、js的包装类型是什么","link":"#_29、js的包装类型是什么","children":[]},{"level":3,"title":"30、JS中的迭代器","slug":"_30、js中的迭代器","link":"#_30、js中的迭代器","children":[]},{"level":3,"title":"31、for...in和for...of的区别","slug":"_31、for-in和for-of的区别","link":"#_31、for-in和for-of的区别","children":[]},{"level":3,"title":"32、取到一个对象的所有属性用什么方法","slug":"_32、取到一个对象的所有属性用什么方法","link":"#_32、取到一个对象的所有属性用什么方法","children":[]},{"level":3,"title":"33、Reflect和Proxy","slug":"_33、reflect和proxy","link":"#_33、reflect和proxy","children":[]},{"level":3,"title":"34、实现交换两个变量的值","slug":"_34、实现交换两个变量的值","link":"#_34、实现交换两个变量的值","children":[]},{"level":3,"title":"35、null == 0，null >= 0这两个逻辑表达式的值分别是什么","slug":"_35、null-0-null-0这两个逻辑表达式的值分别是什么","link":"#_35、null-0-null-0这两个逻辑表达式的值分别是什么","children":[]},{"level":3,"title":"36、js数据精度的问题，如何保证数据做了运算之后，精度不变","slug":"_36、js数据精度的问题-如何保证数据做了运算之后-精度不变","link":"#_36、js数据精度的问题-如何保证数据做了运算之后-精度不变","children":[]},{"level":3,"title":"37、如何实现数组的去重","slug":"_37、如何实现数组的去重","link":"#_37、如何实现数组的去重","children":[]},{"level":3,"title":"38、promise.all[promise1, promise2, promise3, ....]和async/await promise1  promise2,  promise3区别","slug":"_38、promise-all-promise1-promise2-promise3-和async-await-promise1-promise2-promise3区别","link":"#_38、promise-all-promise1-promise2-promise3-和async-await-promise1-promise2-promise3区别","children":[]}]},{"level":2,"title":"vue","slug":"vue","link":"#vue","children":[{"level":3,"title":"1、v-for循环展示列表，为什么要加上key？可以用index当作key吗？","slug":"_1、v-for循环展示列表-为什么要加上key-可以用index当作key吗","link":"#_1、v-for循环展示列表-为什么要加上key-可以用index当作key吗","children":[]},{"level":3,"title":"2、vue的diff中，key的作用是什么","slug":"_2、vue的diff中-key的作用是什么","link":"#_2、vue的diff中-key的作用是什么","children":[]},{"level":3,"title":"3、vue的响应式是怎么实现的","slug":"_3、vue的响应式是怎么实现的","link":"#_3、vue的响应式是怎么实现的","children":[]},{"level":3,"title":"4、vue-router两种模式的区别","slug":"_4、vue-router两种模式的区别","link":"#_4、vue-router两种模式的区别","children":[]},{"level":3,"title":"5、history模式下需要服务端怎么配合","slug":"_5、history模式下需要服务端怎么配合","link":"#_5、history模式下需要服务端怎么配合","children":[]},{"level":3,"title":"6、vuex有哪些属性","slug":"_6、vuex有哪些属性","link":"#_6、vuex有哪些属性","children":[]},{"level":3,"title":"7、vue中diff怎么实现的","slug":"_7、vue中diff怎么实现的","link":"#_7、vue中diff怎么实现的","children":[]},{"level":3,"title":"8、vue的diff是广度优先还是深度优先","slug":"_8、vue的diff是广度优先还是深度优先","link":"#_8、vue的diff是广度优先还是深度优先","children":[]},{"level":3,"title":"9、v-if和v-show的区别，v-show会触发回流吗","slug":"_9、v-if和v-show的区别-v-show会触发回流吗","link":"#_9、v-if和v-show的区别-v-show会触发回流吗","children":[]},{"level":3,"title":"10、display: none、visibility: hidden的区别","slug":"_10、display-none、visibility-hidden的区别","link":"#_10、display-none、visibility-hidden的区别","children":[]},{"level":3,"title":"11、v-if或者v-show之后，给原本不展示后来新展示的元素聚焦，需要加上nextTick处理吗","slug":"_11、v-if或者v-show之后-给原本不展示后来新展示的元素聚焦-需要加上nexttick处理吗","link":"#_11、v-if或者v-show之后-给原本不展示后来新展示的元素聚焦-需要加上nexttick处理吗","children":[]},{"level":3,"title":"12、下标的形式直接修改数组的元素，可以实现响应式吗","slug":"_12、下标的形式直接修改数组的元素-可以实现响应式吗","link":"#_12、下标的形式直接修改数组的元素-可以实现响应式吗","children":[]},{"level":3,"title":"13、vue组件的生命周期，详细说说","slug":"_13、vue组件的生命周期-详细说说","link":"#_13、vue组件的生命周期-详细说说","children":[]},{"level":3,"title":"14、v-if和v-for的优先级","slug":"_14、v-if和v-for的优先级","link":"#_14、v-if和v-for的优先级","children":[]},{"level":3,"title":"15、vue-router的导航守卫有哪些？切换路由时导航守卫触发的顺序是什么？","slug":"_15、vue-router的导航守卫有哪些-切换路由时导航守卫触发的顺序是什么","link":"#_15、vue-router的导航守卫有哪些-切换路由时导航守卫触发的顺序是什么","children":[]},{"level":3,"title":"16、项目中用到的导航钩子有哪些？","slug":"_16、项目中用到的导航钩子有哪些","link":"#_16、项目中用到的导航钩子有哪些","children":[]},{"level":3,"title":"17、vue-router如何传递数据","slug":"_17、vue-router如何传递数据","link":"#_17、vue-router如何传递数据","children":[]},{"level":3,"title":"18、说一下keep-alive组件？它的原理是什么？","slug":"_18、说一下keep-alive组件-它的原理是什么","link":"#_18、说一下keep-alive组件-它的原理是什么","children":[]},{"level":3,"title":"19、vue中虚拟DOM生成的过程","slug":"_19、vue中虚拟dom生成的过程","link":"#_19、vue中虚拟dom生成的过程","children":[]},{"level":3,"title":"20、vue2中，data为什么是一个函数，返回一个对象的形式","slug":"_20、vue2中-data为什么是一个函数-返回一个对象的形式","link":"#_20、vue2中-data为什么是一个函数-返回一个对象的形式","children":[]},{"level":3,"title":"21、vue中的组件通信的方式","slug":"_21、vue中的组件通信的方式","link":"#_21、vue中的组件通信的方式","children":[]},{"level":3,"title":"22、vue2和vue3有什么区别","slug":"_22、vue2和vue3有什么区别","link":"#_22、vue2和vue3有什么区别","children":[]},{"level":3,"title":"23、vue3的双向绑定的API为什么要换","slug":"_23、vue3的双向绑定的api为什么要换","link":"#_23、vue3的双向绑定的api为什么要换","children":[]},{"level":3,"title":"24、vue中this.$children取到的是什么？顺序？","slug":"_24、vue中this-children取到的是什么-顺序","link":"#_24、vue中this-children取到的是什么-顺序","children":[]},{"level":3,"title":"25、Vue中如何定义全局变量","slug":"_25、vue中如何定义全局变量","link":"#_25、vue中如何定义全局变量","children":[]},{"level":3,"title":"26、为什么vue中mixin里面定义的data全局可用","slug":"_26、为什么vue中mixin里面定义的data全局可用","link":"#_26、为什么vue中mixin里面定义的data全局可用","children":[]},{"level":3,"title":"27、使用vuex，在页面离dispatch，提交了一个mutation改变了state，state改变了之后是如何实现页面的更新的","slug":"_27、使用vuex-在页面离dispatch-提交了一个mutation改变了state-state改变了之后是如何实现页面的更新的","link":"#_27、使用vuex-在页面离dispatch-提交了一个mutation改变了state-state改变了之后是如何实现页面的更新的","children":[]},{"level":3,"title":"28、为什么要定义actions去处理异步的操作","slug":"_28、为什么要定义actions去处理异步的操作","link":"#_28、为什么要定义actions去处理异步的操作","children":[]},{"level":3,"title":"29、为什么mutation中不能做异步操作","slug":"_29、为什么mutation中不能做异步操作","link":"#_29、为什么mutation中不能做异步操作","children":[]},{"level":3,"title":"30、vue中常用的指令","slug":"_30、vue中常用的指令","link":"#_30、vue中常用的指令","children":[]},{"level":3,"title":"31、v-model是什么的语法糖","slug":"_31、v-model是什么的语法糖","link":"#_31、v-model是什么的语法糖","children":[]},{"level":3,"title":"32、如何定义一个自定义指令","slug":"_32、如何定义一个自定义指令","link":"#_32、如何定义一个自定义指令","children":[]},{"level":3,"title":"33、vue中如何实现事件的定义、触发","slug":"_33、vue中如何实现事件的定义、触发","link":"#_33、vue中如何实现事件的定义、触发","children":[]},{"level":3,"title":"34、vue的事件和原生事件绑定有什么不同？（绑定的时候加不加括号的区别）","slug":"_34、vue的事件和原生事件绑定有什么不同-绑定的时候加不加括号的区别","link":"#_34、vue的事件和原生事件绑定有什么不同-绑定的时候加不加括号的区别","children":[]},{"level":3,"title":"35、vue项目中proxy代理的实现原理","slug":"_35、vue项目中proxy代理的实现原理","link":"#_35、vue项目中proxy代理的实现原理","children":[]},{"level":3,"title":"36、Vue中计算属性和watch的区别","slug":"_36、vue中计算属性和watch的区别","link":"#_36、vue中计算属性和watch的区别","children":[]},{"level":3,"title":"37、Vue生命周期这样设计有什么好处","slug":"_37、vue生命周期这样设计有什么好处","link":"#_37、vue生命周期这样设计有什么好处","children":[]},{"level":3,"title":"38、vue3中diff算法的改进有哪些","slug":"_38、vue3中diff算法的改进有哪些","link":"#_38、vue3中diff算法的改进有哪些","children":[]},{"level":3,"title":"39、Vue的单向数据流和双向数据流","slug":"_39、vue的单向数据流和双向数据流","link":"#_39、vue的单向数据流和双向数据流","children":[]},{"level":3,"title":"40、vue路由懒加载的原理","slug":"_40、vue路由懒加载的原理","link":"#_40、vue路由懒加载的原理","children":[]},{"level":3,"title":"41、vuex默认是存储在哪里的","slug":"_41、vuex默认是存储在哪里的","link":"#_41、vuex默认是存储在哪里的","children":[]},{"level":3,"title":"42、vue2中哪些情况下会导致数据不是响应式的","slug":"_42、vue2中哪些情况下会导致数据不是响应式的","link":"#_42、vue2中哪些情况下会导致数据不是响应式的","children":[]},{"level":3,"title":"43、vue的单文件组件中，在style标签上加scoped会发生什么？此时如何去修改子组件的样式","slug":"_43、vue的单文件组件中-在style标签上加scoped会发生什么-此时如何去修改子组件的样式","link":"#_43、vue的单文件组件中-在style标签上加scoped会发生什么-此时如何去修改子组件的样式","children":[]},{"level":3,"title":"44、vue的$nectTick的作用和场景","slug":"_44、vue的-necttick的作用和场景","link":"#_44、vue的-necttick的作用和场景","children":[]},{"level":3,"title":"45、动态路由import的时候，会传一个注释/wenpackChunName: xxx/是做什么的","slug":"_45、动态路由import的时候-会传一个注释-wenpackchunname-xxx-是做什么的","link":"#_45、动态路由import的时候-会传一个注释-wenpackchunname-xxx-是做什么的","children":[]},{"level":3,"title":"46、基于已有组件进行封装的时候，原组件可能有很多的props、emits、slots，这种怎么处理（怎么处理属性、时间、插槽的透传？）","slug":"_46、基于已有组件进行封装的时候-原组件可能有很多的props、emits、slots-这种怎么处理-怎么处理属性、时间、插槽的透传","link":"#_46、基于已有组件进行封装的时候-原组件可能有很多的props、emits、slots-这种怎么处理-怎么处理属性、时间、插槽的透传","children":[]},{"level":3,"title":"47、怎么把一些没有定义的属性，透传到$attrs里面","slug":"_47、怎么把一些没有定义的属性-透传到-attrs里面","link":"#_47、怎么把一些没有定义的属性-透传到-attrs里面","children":[]},{"level":3,"title":"48、SPA和MPA的区别","slug":"_48、spa和mpa的区别","link":"#_48、spa和mpa的区别","children":[]},{"level":3,"title":"49、this.$refs是响应式的吗？在computed中使用了this.$refs获取子组件数据，子组件数据变化，可以响应式的改变计算属性吗","slug":"_49、this-refs是响应式的吗-在computed中使用了this-refs获取子组件数据-子组件数据变化-可以响应式的改变计算属性吗","link":"#_49、this-refs是响应式的吗-在computed中使用了this-refs获取子组件数据-子组件数据变化-可以响应式的改变计算属性吗","children":[]},{"level":3,"title":"50、vue2中，更新数组中的某一项，如何实现页面也可以更新","slug":"_50、vue2中-更新数组中的某一项-如何实现页面也可以更新","link":"#_50、vue2中-更新数组中的某一项-如何实现页面也可以更新","children":[]},{"level":3,"title":"51、vue组件的created里面，用原生JS的方式把模板清空（找到这个dom把它清空掉），那么这个清空操作会一直生效吗？不会","slug":"_51、vue组件的created里面-用原生js的方式把模板清空-找到这个dom把它清空掉-那么这个清空操作会一直生效吗-不会","link":"#_51、vue组件的created里面-用原生js的方式把模板清空-找到这个dom把它清空掉-那么这个清空操作会一直生效吗-不会","children":[]},{"level":3,"title":"52、vuex的实现原理","slug":"_52、vuex的实现原理","link":"#_52、vuex的实现原理","children":[]}]},{"level":2,"title":"网络和浏览器","slug":"网络和浏览器","link":"#网络和浏览器","children":[{"level":3,"title":"1、浏览器中输入一个URL到页面渲染发生了什么，详细说说。","slug":"_1、浏览器中输入一个url到页面渲染发生了什么-详细说说。","link":"#_1、浏览器中输入一个url到页面渲染发生了什么-详细说说。","children":[]},{"level":3,"title":"2、浏览器缓存机制。强缓存、协商缓存的标识","slug":"_2、浏览器缓存机制。强缓存、协商缓存的标识","link":"#_2、浏览器缓存机制。强缓存、协商缓存的标识","children":[]},{"level":3,"title":"3、浏览器调试工具的performance","slug":"_3、浏览器调试工具的performance","link":"#_3、浏览器调试工具的performance","children":[]},{"level":3,"title":"4、get和post的区别？有本质上的区别吗？","slug":"_4、get和post的区别-有本质上的区别吗","link":"#_4、get和post的区别-有本质上的区别吗","children":[]},{"level":3,"title":"5、cookie、sessionStorage、localStorage有什么区别","slug":"_5、cookie、sessionstorage、localstorage有什么区别","link":"#_5、cookie、sessionstorage、localstorage有什么区别","children":[]},{"level":3,"title":"6、http-only属性是做什么的","slug":"_6、http-only属性是做什么的","link":"#_6、http-only属性是做什么的","children":[]},{"level":3,"title":"7、浏览器的同源策略是什么？解决跨域的方法有哪些？","slug":"_7、浏览器的同源策略是什么-解决跨域的方法有哪些","link":"#_7、浏览器的同源策略是什么-解决跨域的方法有哪些","children":[]},{"level":3,"title":"8、https和http有什么区别；http1和http2有什么区别","slug":"_8、https和http有什么区别-http1和http2有什么区别","link":"#_8、https和http有什么区别-http1和http2有什么区别","children":[]},{"level":3,"title":"9、websocket","slug":"_9、websocket","link":"#_9、websocket","children":[]},{"level":3,"title":"10、http报文的组成","slug":"_10、http报文的组成","link":"#_10、http报文的组成","children":[]},{"level":3,"title":"11、常见的安全漏洞有哪些","slug":"_11、常见的安全漏洞有哪些","link":"#_11、常见的安全漏洞有哪些","children":[]},{"level":3,"title":"12、http1中的keep-alive是什么","slug":"_12、http1中的keep-alive是什么","link":"#_12、http1中的keep-alive是什么","children":[]},{"level":3,"title":"13、tcp/ip协议族","slug":"_13、tcp-ip协议族","link":"#_13、tcp-ip协议族","children":[]},{"level":3,"title":"14、进程、线程、协程是什么？","slug":"_14、进程、线程、协程是什么","link":"#_14、进程、线程、协程是什么","children":[]},{"level":3,"title":"15、URL长链接变为短链接","slug":"_15、url长链接变为短链接","link":"#_15、url长链接变为短链接","children":[]},{"level":3,"title":"16、开发中针对一个请求，想要修改这个请求的参数，快速的重新发送，如何处理","slug":"_16、开发中针对一个请求-想要修改这个请求的参数-快速的重新发送-如何处理","link":"#_16、开发中针对一个请求-想要修改这个请求的参数-快速的重新发送-如何处理","children":[]}]},{"level":2,"title":"算法和数据结构","slug":"算法和数据结构","link":"#算法和数据结构","children":[{"level":3,"title":"1、子序列的最大和（leetcode有原题）","slug":"_1、子序列的最大和-leetcode有原题","link":"#_1、子序列的最大和-leetcode有原题","children":[]},{"level":3,"title":"2、一维数组转树形结构","slug":"_2、一维数组转树形结构","link":"#_2、一维数组转树形结构","children":[]},{"level":3,"title":"3、实现一个深拷贝，需要考虑循环引用","slug":"_3、实现一个深拷贝-需要考虑循环引用","link":"#_3、实现一个深拷贝-需要考虑循环引用","children":[]},{"level":3,"title":"4、实现一个map","slug":"_4、实现一个map","link":"#_4、实现一个map","children":[]},{"level":3,"title":"5、实现一个reduce","slug":"_5、实现一个reduce","link":"#_5、实现一个reduce","children":[]},{"level":3,"title":"6、顺时针输出一个二维数组","slug":"_6、顺时针输出一个二维数组","link":"#_6、顺时针输出一个二维数组","children":[]}]},{"level":2,"title":"前端工程化","slug":"前端工程化","link":"#前端工程化","children":[{"level":3,"title":"1、webpack的sourcemap","slug":"_1、webpack的sourcemap","link":"#_1、webpack的sourcemap","children":[]},{"level":3,"title":"2、webpack的loader的执行顺序是怎么样的","slug":"_2、webpack的loader的执行顺序是怎么样的","link":"#_2、webpack的loader的执行顺序是怎么样的","children":[]},{"level":3,"title":"3、webpack怎么处理循环引用的","slug":"_3、webpack怎么处理循环引用的","link":"#_3、webpack怎么处理循环引用的","children":[]},{"level":3,"title":"4、什么是前端工程化","slug":"_4、什么是前端工程化","link":"#_4、什么是前端工程化","children":[]}]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"1、一个新的项目，如何进行技术选型、技术调研","slug":"_1、一个新的项目-如何进行技术选型、技术调研","link":"#_1、一个新的项目-如何进行技术选型、技术调研","children":[]},{"level":3,"title":"2、git rebase和git merge有什么异同","slug":"_2、git-rebase和git-merge有什么异同","link":"#_2、git-rebase和git-merge有什么异同","children":[]},{"level":3,"title":"前端的包管理器","slug":"前端的包管理器","link":"#前端的包管理器","children":[]},{"level":3,"title":"npm","slug":"npm","link":"#npm","children":[]},{"level":3,"title":"yarn","slug":"yarn","link":"#yarn","children":[]},{"level":3,"title":"pnpm：可以更小更快的安装我们的依赖","slug":"pnpm-可以更小更快的安装我们的依赖","link":"#pnpm-可以更小更快的安装我们的依赖","children":[]},{"level":3,"title":"monorepo","slug":"monorepo","link":"#monorepo","children":[]},{"level":3,"title":"深度优先和广度优先","slug":"深度优先和广度优先","link":"#深度优先和广度优先","children":[]}]}],"relativePath":"interview/module.md"}'),n={name:"interview/module.md"},t=l("",214),r=[t];function o(p,i,c,h,d,y){return e(),a("div",null,r)}const D=s(n,[["render",o]]);export{F as __pageData,D as default};
